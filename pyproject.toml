[project]
name = "query-generator"
version = "0.1.0"
requires-python = ">= 3.11"
dependencies = []

[project.optional-dependencies]
test = ["pytest"]
lint = ["ruff"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pixi.pypi-dependencies]
query_generator = { path = ".", editable = true }

[tool.pixi.dependencies]
typer = ">=0.15.2,<0.16"
rich  = ">=14.0.0,<15"

[tool.pixi.feature.test.dependencies]
pytest = "*"

[tool.pixi.feature.lint.dependencies]
ruff = "*"
mypy = "*"

[tool.pixi.environments]
default = { features = [], solve-group = "default" }
test    = { features = ["test"], solve-group = "default" }
lint    = { features = ["lint"], solve-group = "default" }

[tool.pixi.tasks]
#lint = "ruff format src/"
main = "python src/query_generator/main.py"
commit = { cmd = "fossil commit", depends-on = ["lint", "test"]}

[tool.pixi.feature.lint.tasks]
format = "ruff format src tests"
check = "ruff check --fix src tests"
typing = "mypy --strict src"
lint = {depends-on = ["format","check","typing"]}

[tool.pixi.feature.test.tasks]
test = "pytest"

[tool.ruff]
# Set the maximum line length to 79.
line-length = 79

# [tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set.
# extend-select = ["E501"]
[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
